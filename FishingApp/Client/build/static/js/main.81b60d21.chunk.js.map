{"version":3,"sources":["components/Registration.js","components/Login.js","utils/authenticate.js","App.js","serviceWorker.js","store/reducer.js","components/AddNewFish.js","components/BaseLayout.js","components/Weather.js","components/PreviousFishList.js","components/Map.js","index.js"],"names":["Registration","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRegistrationClick","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","username","password","then","response","json","result","console","log","success","setState","message","handleTextBoxChange","e","defineProperty","target","name","value","react_default","a","createElement","className","onChange","placeholder","onClick","Component","connect","dispatch","onAuthenticated","token","type","Login","handleLoginClick","axios","post","data","id","localStorage","setItem","props","defaults","common","concat","setAuthenticationHeader","catch","error","App","src_components_Login","src_components_Registration","Boolean","window","location","hostname","match","initialState","isAuthenticated","fishes","uid","currentWeather","reducer","arguments","length","undefined","action","objectSpread","AddNewFish","handleAddCatchClick","latitude","longitude","fishname","fishsize","lurebait","linestrength","rod","reel","weather","userId","addedFish","_this2","navigator","geolocation","getCurrentPosition","position","coords","fish","Menu","handleLogoutClick","removeItem","logout","history","push","react_router_dom","to","BaseLayout","BaseLayout_Menu","onLogout","children","withRouter","Weather","handleWeatherClick","get","zipcode","crossdomain","list","weatherinfo","map","info","index","dt_txt","main","temp","temp_max","temp_min","humidity","pressure","description","wind","speed","dispatchWeather","PreviousFishList","_this3","fishData","key","createdAt","href","src","deleteFish","delId","entryKey","status","Error","Map","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","viewport","width","height","zoom","inherits","createClass","esm","offsetLeft","offsetTop","assign","mapboxApiAccessToken","onViewportChange","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_components_BaseLayout","react_router","exact","path","component","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81b60d21.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { setAuthenticationHeader } from '../utils/authenticate'\nimport './Registration.css';\n\nclass Registration extends Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      message: ''\n    }\n  }\n\n  handleRegistrationClick = () => {\n    fetch('https://fishing-app-backend-server.herokuapp.com/registration', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password\n      })\n    }).then(response => response.json())\n    .then(result => {\n      console.log(result)\n      if(result.success) {\n        this.setState({\n          message: result.message\n        })\n      }\n    })\n  }\n\n  handleTextBoxChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  render() {\n    return(\n      <div className=\"registrationbox\">\n      <h2>Register</h2>\n      <p>Please use a valid email account to register</p>\n        <div className=\"registrationinputsbox\">\n          <input className=\"registrationinputfield\" name=\"email\" onChange={this.handleTextBoxChange} placeholder=\"Email Address\"></input>\n          <input className=\"registrationinputfield\" name=\"username\" onChange={this.handleTextBoxChange} placeholder=\"User Name\"></input>\n          <input className=\"registrationinputfield\" name=\"password\" onChange={this.handleTextBoxChange} placeholder=\"Password\"></input>\n          <button className=\"registrationbutton\" onClick={this.handleRegistrationClick}>Register</button>\n          <label className=\"registrationSuccess\">{this.state.message}</label>\n        </div>\n        <label className=\"registrationSuccess\">{this.state.message}</label>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthenticated: (token) => dispatch ({type: 'ON_AUTHENTICATED', token: token})\n  }\n}\nexport default connect(null, mapDispatchToProps)(Registration)\n","import React, {Component} from 'react'\nimport {Registration} from './Registration'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { setAuthenticationHeader } from '../utils/authenticate'\nimport './Login.css';\n\n\nclass Login extends Component {\n\n    constructor() {\n      super()\n\n      this.state = {\n        username: '',\n        password: '',\n        message: ''\n      }\n    }\n\n    handleLoginClick = () => {\n\n    axios.post('https://fishing-app-backend-server.herokuapp.com/login',{\n    username: this.state.username,\n    password: this.state.password\n  }).then(response => {\n\n    let token = response.data.token\n    let id = response.data.id\n\n    localStorage.setItem('jsonwebtoken',token)\n    localStorage.setItem('userId', id)\n    this.props.onAuthenticated(token,id)\n    setAuthenticationHeader(token)\n  }).catch(error => console.log(error))\n  }\n\n\n    handleTextBoxChange = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n    }\n\n  render() {\n    return(\n      <div className=\"loginbox\">\n      <h1> Welcome to Fishing Journal </h1>\n      <h2>Login</h2>\n      <p>If this is your first time using Fishing App please register before attempting to login</p>\n          <div className=\"logininputsbox\">\n        <input className=\"logininputfield\" name=\"username\" onChange={this.handleTextBoxChange} placeholder=\"User Name\"></input>\n        <input className=\"logininputfield\" name=\"password\" onChange={this.handleTextBoxChange} placeholder=\"Password\"></input>\n        <button className=\"loginbutton\" onClick={this.handleLoginClick}>Login</button>\n        <label>{this.state.message}</label>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthenticated: (token, id) => dispatch({type: 'ON_AUTHENTICATED', token:token, id:id})\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n","import axios from 'axios'\n\nexport function setAuthenticationHeader(token) {\n  if(token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n  } else {\n    delete axios.defaults.headers.common['Authorization']\n  }\n}\n","import React, {Component} from 'react';\nimport Login from './components/Login'\nimport Registration from './components/Registration'\nimport './App.css';\n\nclass App extends Component {\n\n    render() {\n      return (\n        <div className=\"loginBox\">\n        <Login />\n        <Registration />\n        </div>\n      )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  isAuthenticated: false,\n  fishes: [],\n  uid: 0,\n  currentWeather: []\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'ON_AUTHENTICATED':\n    return {\n      ...state,\n      isAuthenticated: action.token !=null ? true : false,\n      uid: action.id\n    }\n    case 'ADDEDFISH':\n    return {\n      ...state,\n      fishes: state.fishes.concat(action.value)\n    }\n    case 'LOGOUT':\n    return {\n      ...state,\n      isAuthenticated: false\n    }\n    case 'CURRENTWEATHER':\n    return {\n      ...state,\n      currentWeather: state.currentWeather.concat(action.value)\n    }\n  }\n  return state\n}\n\nexport default reducer\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport './AddNewFish.css';\n\nclass AddNewFish extends Component {\n  constructor() {\n    super()\n\n    this.state={\n      latitude: 0.0,\n      longitude: 0.0,\n      fishname: '',\n      fishsize: '',\n      lurebait: '',\n      linestrength: '',\n      rod: '',\n      reel: '',\n      weather: '',\n      message: '',\n    }\n  }\n\n\n  handleAddCatchClick = () => {\n    fetch('https://fishing-app-backend-server.herokuapp.com/api/addnewfish', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        latitude: this.state.latitude,\n        longitude: this.state.longitude,\n        fishname: this.state.fishname,\n        fishsize: this.state.fishsize,\n        lurebait: this.state.lurebait,\n        linestrength: this.state.linestrength,\n        rod: this.state.rod,\n        reel: this.state.reel,\n        weather: this.state.weather,\n        userId: this.props.id\n      })\n    }).then(response => response.json())\n    .then(result => {\n      if(result.success) {\n        this.setState({\n          message: result.message\n        })\n      }\n    })\n    .then(()=> this.props.addedFish(this.state))\n  }\n\n  componentDidMount() {\n    if('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        })\n      })\n    }\n  }\n\n  handleTextBoxChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"newFishBox\">\n        <h1 className=\"congratsText\">Congratulations! You caught a fish!</h1>\n        <p>Fill out as much or as alittle of the following form to save your catch in our database. The app will automatically save your GPS coordinates and time of day when you submit the form</p>\n          <div className=\"newFishInput\">\n          <input className=\"fishInput\" name=\"fishname\" onChange={this.handleTextBoxChange} placeholder=\"Name or Species of Fish\"></input>\n          <input className=\"fishInput\" name=\"lurebait\" onChange={this.handleTextBoxChange} placeholder=\"Type of Lure or Bait\"></input>\n          <input className=\"fishInput\" name=\"linestrength\" onChange={this.handleTextBoxChange} placeholder=\"Line Strength\"></input>\n          <input className=\"fishInput\" name=\"rod\" onChange={this.handleTextBoxChange} placeholder=\"Type of Rod\"></input>\n          <input className=\"fishInput\" name=\"reel\" onChange={this.handleTextBoxChange} placeholder=\"Type of Reel\"></input>\n          <input className=\"fishInput\" name=\"fishsize\" onChange={this.handleTextBoxChange} placeholder=\"Size of your fish\"></input>\n          <input className=\"fishInput\" name=\"weather\" onChange={this.handleTextBoxChange} placeholder=\"Current Weather Conditions\"></input>\n          <button className=\"fishButton\" onClick={this.handleAddCatchClick}>Save Catch!</button>\n          <label className=\"saveCatchMessage\">{this.state.message}</label>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    id: state.uid\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addedFish: (fish) => dispatch({type: 'ADDEDFISH', value: fish})\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewFish)\n","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport './BaseLayout.css';\n\n\nclass Menu extends Component {\n\n  handleLogoutClick = () => {\n    console.log(this.props.isAuthenticated)\n    localStorage.removeItem('jsonwebtoken')\n    this.props.logout()\n    this.props.history.push('/')\n    console.log('Log out successful')\n  }\n\n  render() {\n    return(\n      <div className=\"navMenu\">\n      <ul className=\"navUL\">\n        {this.props.isAuthenticated ? <li className=\"navLink\"><button className=\"menuButton\"><NavLink to='/addnewfish'>Add Fish</NavLink></button></li> : null }\n        {this.props.isAuthenticated ? <li className=\"navLink\"><button className=\"menuButton\"><NavLink to='/previousfishlist'>Previously Caught Fish</NavLink></button></li> : null }\n        {this.props.isAuthenticated ? <li className=\"navLink\"><button className=\"menuButton\"><NavLink to='/weather'>Weather Forecast</NavLink></button></li> : null }\n        {this.props.isAuthenticated ? <li className=\"navLink\"><button className=\"menuButton\"><NavLink to='/heatmap'>Map</NavLink></button></li> : null }\n        {this.props.isAuthenticated ? <li className=\"navLink\"><button className=\"menuButton\" onClick ={this.handleLogoutClick}><NavLink to='#'>Logout</NavLink></button></li> : null }\n      </ul>\n      </div>\n    )\n  }\n}\n\nclass BaseLayout extends Component {\n  render () {\n    return (\n      <div className=\"baselayoutbox\">\n        <Menu isAuthenticated={this.props.isAuthenticated} logout={this.props.onLogout} history={this.props.history}/>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => dispatch({type: 'LOGOUT'})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BaseLayout))\n","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport './Weather.css';\n\nclass Weather extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      zipcode: 0,\n      weather: []\n    }\n  }\n\n\n\n  handleWeatherClick = () =>{\n\n    axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.openweathermap.org/data/2.5/forecast?zip=${this.state.zipcode},us&units=imperial&appid=3226cf76708d38911413730b921d802c`,{crossdomain:true})\n    .then(response => {\n      console.log(response)\n      this.setState({weather: response.data.list})\n    })\n  }\n\n\n  handleTextBoxChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  render() {\n\n    const weatherinfo = this.state.weather.map((info, index) => {\n      if (index === 0 || index === 8 || index === 16)\n\n      {return(\n          <div className='weatherList' >\n          <ul>\n          <li className= 'weatherListItems'>\n          <p>Date/Time: {info.dt_txt}</p>\n          <p>Current Temperature: {info.main.temp}°</p>\n          <p>Temperature High: {info.main.temp_max}°</p>\n          <p>Temperature Low: {info.main.temp_min}°</p>\n          <p>Humidity: {info.main.humidity}</p>\n          <p>Atmospheric Pressure: {info.main.pressure} mbar</p>\n          <p>Weather Conditions: {info.weather[0].main}</p>\n          <p>Weather Details: {info.weather[0].description}</p>\n          <p>Wind Speed: {info.wind.speed} mph</p>\n          </li>\n          </ul>\n          </div>\n      )\n    }\n  })\n\n    return(\n      <div className=\"weatherSearch\">\n      <h1>Weather Forecast</h1>\n      <input name=\"zipcode\" onChange={this.handleTextBoxChange} placeholder=\"Enter Zipcode\"></input>\n      <button onClick={this.handleWeatherClick}>Submit</button>\n      {weatherinfo}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n    weather: state.currentWeather\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return ({\n    dispatchWeather: (weather) => {dispatch({type: 'CURRENTWEATHER', value: weather})\n    }\n  })\n}\n\nexport default connect(null, mapDispatchToProps)(Weather)\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport './PreviousFishList.css';\n\nclass PreviousFishList extends Component {\n  constructor() {\n    super()\n\n    this.state={\n      fish: []\n    }\n  }\n\n  componentDidMount() {\n    fetch(`https://fishing-app-backend-server.herokuapp.com/previousfishlist/${this.props.userId}`)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        fish: data\n      })\n    })\n  }\n\n\n\n  render() {\n    console.log(this.state.fish)\n    const fishes = this.state.fish\n    let fishData = fishes.map((fish) => {\n      return <li className=\"fishLI\" key={fish.id}>\n      <h2>{fish.fishname}</h2>\n      <p>Weight: {fish.fishsize}</p>\n      <p>Type of Lure or Bait: {fish.lurebait}</p>\n      <p>Line Strength: {fish.linestrength}</p>\n      <p>Type of rod: {fish.rod}</p>\n      <p>Type of reel: {fish.reel}</p>\n      <p>Weather Conditions: {fish.weather}</p>\n      <p>Time and Date: {fish.createdAt}</p>\n      <a className=\"locationButton\" href={`https://www.latlong.net/c/?lat=${fish.latitude}&long=${fish.longitude}`} target=\"_blank\"><img src=\"./worldwide.png\" /></a>\n      <button className=\"deleteButton\" onClick={() => this.deleteFish(fish)}><img src=\"./clear.png\" /></button>\n      </li>\n    })\n\n    return(\n      <div className=\"previousFishBox\">\n      <h1>Previous Catches</h1>\n      <ul className=\"fishUL\">{fishData}</ul>\n      </div>\n    )\n  }\n\n  deleteFish(fish) {\n\n    let delId = {\n        entryKey: fish.id\n    }\n    console.log(delId)\n    fetch(\"https://fishing-app-backend-server.herokuapp.com/delete\", {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(delId)\n    }).then(response => {\n        if (response.status >= 400) {\n            throw new Error(\"Error\")\n        }\n        return response.json()\n\n    }).then(delId => {\n        if(delId === \"success\"){\n            console.log(\"success\")\n      }\n    })\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n\n    userId: state.uid\n\n  }\n}\n\nexport default connect(mapStateToProps)(PreviousFishList)\n","import React, {Component} from 'react';\nimport ReactMapGL from 'react-map-gl';\nimport {Marker} from 'react-map-gl';\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport './Map.css';\n\n\nexport class Map extends Component {\n\n  state = {\n    viewport: {\n      width: 400,\n      height: 400,\n      latitude: 35.0,\n      longitude: -100.0,\n      zoom: 3\n    },\n    fish: []\n  };\n\n  componentDidMount() {\n    axios.post('https://fishing-app-backend-server.herokuapp.com/allfish',{\n      userId: this.props.userId\n    })\n    .then(response => response.data)\n    .then(data => {\n      console.log(data)\n      this.setState({\n        fish: data\n      })\n    })\n  }\n\n  render() {\n\n    let fishData = this.state.fish.map(data => {\n      return (\n        <Marker latitude={data.latitude} longitude={data.longitude} offsetLeft={-20} offsetTop={-10}><img src=\"fish.png\"></img></Marker>\n      )\n    })\n\n    return (\n      <div className=\"mapBox\">\n      <ReactMapGL mapboxApiAccessToken='pk.eyJ1IjoiZ3ByaXpuYXIiLCJhIjoiY2p2cGpxYWM5MmE4NDQ4cWxiY3N0bTFlOSJ9.zjGnBTabn9sRQIZ6C2FjRw'\n        {...this.state.viewport} onViewportChange={(viewport) => this.setState({viewport})}>\n        {fishData}\n      </ReactMapGL>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n\n    userId: state.uid\n\n  }\n}\n\nexport default connect(mapStateToProps)(Map)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport reducer from './store/reducer'\nimport requireAuth from './components/requireAuth'\nimport {Provider} from 'react-redux'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport AddNewFish from './components/AddNewFish'\nimport BaseLayout from './components/BaseLayout'\nimport Login from './components/Login'\nimport Weather from './components/Weather'\nimport PreviousFishList from './components/PreviousFishList'\nimport Map from './components/Map'\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n  <BaseLayout>\n    <Switch>\n      <Route exact path ='/' component={App} />\n      <Route path ='/addnewfish' component={AddNewFish} />\n      <Route path ='/previousfishlist' component={PreviousFishList} />\n      <Route path ='/weather' component={Weather} />\n      <Route path ='/heatmap' component={Map} />\n    </Switch>\n    </BaseLayout>\n    </BrowserRouter>\n  </Provider>\n      , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}